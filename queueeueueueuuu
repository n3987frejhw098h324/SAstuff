local Players = game:GetService("Players")
local PhysicsService = game:GetService("PhysicsService")

local localPlayer = Players.LocalPlayer
local localCharacter = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local hrp = localCharacter:WaitForChild("HumanoidRootPart")

local function setupNoCollisionGroup()
	local groupName = "NoPlayerCollision"
	
	pcall(function()
		PhysicsService:CreateCollisionGroup(groupName)
	end)
	PhysicsService:CollisionGroupSetCollidable(groupName, groupName, false)

	for _, part in ipairs(localCharacter:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CollisionGroup = groupName
		end
	end

	localCharacter.DescendantAdded:Connect(function(desc)
		if desc:IsA("BasePart") then
			desc.CollisionGroup = groupName
		end
	end)
end

setupNoCollisionGroup()

local POS2_A = Vector3.new(66, 44, 90)
local POS2_B = Vector3.new(-75, 44, 93)
local TP_SPOT = Vector3.new(67, 44, 99)

local function tweenTo(part, goalPos, duration)
	local TweenService = game:GetService("TweenService")
	local info = TweenInfo.new(duration, Enum.EasingStyle.Linear)
	local goal = {CFrame = CFrame.new(goalPos)}
	local tween = TweenService:Create(part, info, goal)
	tween:Play()
	tween.Completed:Wait()
end

tweenTo(hrp, POS2_A, 1)

task.spawn(function()
	while true do
		for _ = 1, 2 do
			task.wait(17)
			tweenTo(hrp, TP_SPOT, 1)
			tweenTo(hrp, POS2_A, 1)
		end
		for _ = 1, 2 do
			task.wait(17)
			tweenTo(hrp, TP_SPOT, 1)
			tweenTo(hrp, POS2_B, 1)
		end
	end
end)

return
